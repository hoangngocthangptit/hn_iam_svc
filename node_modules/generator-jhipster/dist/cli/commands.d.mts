declare const defaultCommands: {
    readonly add: {
        readonly desc: "Add a feature to current project";
        readonly removed: string;
    };
    readonly app: {
        readonly desc: "[Default] Create a new JHipster application based on the selected options";
    };
    readonly aws: {
        readonly desc: "Deploy the current application to Amazon Web Services";
        readonly removed: string;
    };
    readonly 'azure-app-service': {
        readonly desc: "Deploy the current application to Azure App Service";
        readonly removed: string;
    };
    readonly 'azure-spring-cloud': {
        readonly desc: "Deploy the current application to Azure Spring Cloud";
        readonly removed: string;
    };
    readonly 'ci-cd': {
        readonly desc: "Create pipeline scripts for popular Continuous Integration/Continuous Deployment tools";
    };
    readonly cloudfoundry: {
        readonly desc: "Generate a `deploy/cloudfoundry` folder with a specific manifest.yml to deploy to Cloud Foundry";
        readonly removed: string;
    };
    readonly 'docker-compose': {
        readonly desc: "Create all required Docker deployment configuration for the selected applications";
    };
    readonly download: {
        readonly desc: "Download jdl file from template repository";
        readonly cliOnly: true;
        readonly argument: ["<jdlFiles...>"];
    };
    readonly entity: {
        readonly desc: "Create a new JHipster entity: JPA entity, Spring server-side components and Angular client-side components";
    };
    readonly entities: {
        readonly desc: "Regenerate entities";
    };
    readonly 'export-jdl': {
        readonly desc: "Create a JDL file from the existing entities";
    };
    readonly gae: {
        readonly desc: "Deploy the current application to Google App Engine";
        readonly removed: string;
    };
    readonly 'generate-blueprint': {
        readonly desc: "Generate a blueprint";
    };
    readonly gradle: {
        readonly desc: "Create Gradle project (alpha)";
    };
    readonly heroku: {
        readonly desc: "Deploy the current application to Heroku";
    };
    readonly info: {
        readonly desc: "Display information about your current project and system";
    };
    readonly init: {
        readonly desc: "Init project (alpha)";
    };
    readonly java: {
        readonly desc: "Run java generator (alpha)";
    };
    readonly jdl: {
        readonly alias: "import-jdl";
        readonly desc: "Create entities from the JDL file/URL/content passed in argument.\n    Use the '--interactive' flag to generate multiple applications in series.";
        readonly help: "\n    Arguments:\n    jdlFiles # The JDL file names or URL Type: String[] Required: true if --inline is not set\n\n    Example:\n    jhipster jdl myfile.jdl\n    jhipster jdl myfile1.jdl myfile2.jdl\n    jhipster jdl https://gist.githubusercontent.com/user/path/app.jdl\n    jhipster jdl jdl-name-from-jdl-samples-repo.jdl (just pass any file name from https://github.com/jhipster/jdl-samples)\n    jhipster jdl --inline \"application { config { baseName jhapp, testFrameworks [cypress] }}\"\n    jhipster jdl --inline \\\n        \"application {\n            config {\n                baseName jhapp,\n                testFrameworks [cypress]\n            }\n        }\"\n    ";
    };
    readonly kubernetes: {
        readonly alias: "k8s";
        readonly desc: "Deploy the current application to Kubernetes";
    };
    readonly 'kubernetes-helm': {
        readonly alias: "helm";
        readonly desc: "Deploy the current application to Kubernetes using Helm package manager";
    };
    readonly 'kubernetes-knative': {
        readonly alias: "knative";
        readonly desc: "Deploy the current application to Kubernetes using knative constructs";
    };
    readonly languages: {
        readonly desc: "Select languages from a list of available languages. The i18n files will be copied to the /webapp/i18n folder";
    };
    readonly maven: {
        readonly desc: "Create Maven project (alpha)";
    };
    readonly openshift: {
        readonly desc: "Deploy the current application to OpenShift";
        readonly removed: string;
    };
    readonly page: {
        readonly desc: "Create a new page. (Supports vue clients)";
        readonly removed: string;
    };
    readonly 'project-name': {
        readonly desc: "Configure project name (alpha)";
    };
    readonly run: {
        readonly desc: "Run a module or custom generator";
        readonly argument: ["[generator]"];
    };
    readonly 'spring-service': {
        readonly alias: "service";
        readonly desc: "Create a new Spring service bean";
        readonly removed: string;
    };
    readonly 'spring-controller': {
        readonly desc: "Create a new Spring controller";
        readonly removed: string;
    };
    readonly 'openapi-client': {
        readonly desc: "Generates java client code from an OpenAPI/Swagger definition";
        readonly removed: string;
    };
    readonly upgrade: {
        readonly desc: "Upgrade the JHipster version, and upgrade the generated application";
    };
    readonly workspaces: {
        readonly desc: "Add workspaces configuration";
    };
};
export default defaultCommands;

/**
 * Copyright 2013-2025 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import type { ApplicationConfiguration } from '../types/application/yo-rc.js';
type ApplicationDefaults = Partial<ApplicationConfiguration>;
export declare function getConfigWithDefaults(customOptions?: ApplicationDefaults): Partial<{
    jhipsterVersion?: string | undefined;
    baseName: string;
    creationTimestamp?: number | undefined;
    lastLiquibaseTimestamp?: number | undefined;
    blueprints?: {
        name: string;
    }[] | undefined;
    testFrameworks?: string[] | undefined;
    microfrontends?: {
        baseName: string;
    }[] | undefined;
    skipClient?: boolean | undefined;
    skipServer?: boolean | undefined;
    jhiPrefix?: string | undefined;
    entitySuffix?: string | undefined;
    dtoSuffix?: string | undefined;
    pkType?: string | undefined;
    clientPackageManager?: string | undefined;
    jdlStore?: string | undefined;
    skipJhipsterDependencies?: boolean | undefined;
    clientFramework?: "react" | "no" | "angular" | "vue" | undefined;
    clientTheme?: string | undefined;
    clientThemeVariant?: string | undefined;
    clientBundler?: "webpack" | "vite" | "experimentalEsbuild" | undefined;
    clientBundlerName?: string | undefined;
    clientTestFramework?: string | undefined;
    clientTestFrameworkName?: string | undefined;
    devServerPort?: number | undefined;
    devServerPortProxy?: number | undefined;
    microfrontend?: boolean | undefined;
    clientTestFrameworks?: "cypress" | undefined;
    withAdminUi?: boolean | undefined;
    clientRootDir?: string | undefined;
    monorepository?: boolean | undefined;
    packageName?: string | undefined;
    packageFolder?: string | undefined;
    withGeneratedFlag?: boolean | undefined;
    buildTool?: string | undefined;
    packageJsonNodeEngine?: unknown;
    packageJsonType?: "commonjs" | "module" | undefined;
    prettierTabWidth?: number | undefined;
    languages?: unknown[] | undefined;
    languagesDefinition?: unknown[] | undefined;
    enableTranslation?: boolean | undefined;
    nativeLanguage?: string | undefined;
    incrementalChangelog?: boolean | undefined;
    skipFakeData?: boolean | undefined;
    applicationType?: "monolith" | "microservice" | "gateway" | undefined;
    skipUserManagement?: boolean | undefined;
    cacheProvider?: string | undefined;
    enableSwaggerCodegen?: boolean | undefined;
    enableHibernateCache?: boolean | undefined;
    searchEngine?: string | undefined;
    skipCheckLengthOfIdentifier?: boolean | undefined;
    websocket?: string | undefined;
    reactive?: boolean | undefined;
    serverPort?: unknown;
    serviceDiscoveryType?: "no" | "eureka" | "consul" | undefined;
    jwtSecretKey?: string | undefined;
    rememberMeKey?: string | undefined;
    authenticationType?: "session" | "jwt" | "oauth2" | undefined;
    feignClient?: boolean | undefined;
    syncUserWithIdp?: boolean | undefined;
    defaultPackaging?: "jar" | "war" | undefined;
    databaseType?: "no" | "sql" | "mongodb" | "cassandra" | "couchbase" | "neo4j" | undefined;
    messageBroker?: "no" | "kafka" | "pulsar" | undefined;
    databaseMigration?: "no" | "liquibase" | undefined;
    graalvmSupport?: boolean | undefined;
    routes?: unknown[] | undefined;
    prodDatabaseType?: "mysql" | "mariadb" | "postgresql" | "mssql" | "oracle" | undefined;
    devDatabaseType?: string | undefined;
}>;
export declare function getConfigForClientApplication(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForAuthenticationType(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForPackageName(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForCacheProvider(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForReactive(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForTranslation(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForDatabaseType(options?: ApplicationDefaults): ApplicationDefaults;
export declare function getServerConfigForMonolithApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForMonolithApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export declare function getServerConfigForGatewayApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForGatewayApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export declare function getServerConfigForMicroserviceApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export declare function getConfigForMicroserviceApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export declare function getDefaultConfigForNewApplication(customOptions?: ApplicationDefaults): ApplicationDefaults;
export {};

declare const command: {
    readonly configs: {
        readonly caret: {
            readonly cli: {
                readonly description: "Use caret in package.json engines";
                readonly type: BooleanConstructor;
            };
            readonly scope: "storage";
        };
        readonly gitDependency: {
            readonly cli: {
                readonly description: "Use git dependency (eg: github:jhipster/generator-jhipster#main)";
                readonly type: StringConstructor;
            };
            readonly scope: "generator";
        };
        readonly cliName: {
            readonly cli: {
                readonly description: "CLI name";
                readonly type: StringConstructor;
            };
            readonly scope: "storage";
        };
        readonly recreatePackageLock: {
            readonly description: "Recreate package lock";
            readonly cli: {
                readonly type: BooleanConstructor;
            };
            readonly scope: "generator";
        };
        readonly skipWorkflows: {
            readonly description: "Skip github workflows";
            readonly cli: {
                readonly type: BooleanConstructor;
            };
            readonly scope: "generator";
        };
        readonly ignoreExistingGenerators: {
            readonly description: "Ignore existing generators";
            readonly cli: {
                readonly type: BooleanConstructor;
            };
            readonly scope: "generator";
        };
        readonly githubRepository: {
            readonly cli: {
                readonly description: "Github Repository";
                readonly type: StringConstructor;
            };
            readonly scope: "storage";
        };
        readonly githubWorkflows: {
            readonly cli: {
                readonly description: "Generate github workflows";
                readonly type: BooleanConstructor;
            };
            readonly scope: "storage";
        };
    };
    readonly options: {
        readonly generateSnapshots: {
            readonly description: "Generate test snapshots";
            readonly type: BooleanConstructor;
        };
        readonly linkJhipsterDependency: {
            readonly description: "Link JHipster dependency for testing";
            readonly type: BooleanConstructor;
            readonly hide: true;
        };
        readonly subGenerators: {
            readonly description: "Sub generators to generate";
            readonly type: ArrayConstructor;
            readonly scope: "storage";
        };
        readonly additionalSubGenerators: {
            readonly description: "Comma separated additional sub generators to generate";
            readonly type: StringConstructor;
            readonly scope: "storage";
        };
        readonly dynamic: {
            readonly description: "Generate dynamic generators (advanced)";
            readonly type: BooleanConstructor;
            readonly scope: "storage";
        };
        readonly js: {
            readonly description: "Use js extension";
            readonly type: BooleanConstructor;
            readonly scope: "storage";
        };
        readonly localBlueprint: {
            readonly description: "Generate a local blueprint";
            readonly type: BooleanConstructor;
            readonly scope: "storage";
        };
        readonly cli: {
            readonly description: "Generate a cli for the blueprint";
            readonly type: BooleanConstructor;
            readonly scope: "storage";
        };
        readonly allGenerators: {
            readonly description: "Generate every sub generator";
            readonly type: BooleanConstructor;
            readonly scope: "generator";
        };
        readonly allPriorities: {
            readonly description: "Generate every priority";
            readonly type: BooleanConstructor;
        };
    };
    readonly import: readonly ["init"];
};
export default command;
